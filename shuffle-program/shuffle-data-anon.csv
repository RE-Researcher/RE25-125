RandOrder,Expression,Summary
1,(a U b) & (c U d),"b has to be true either in the moment in which the formula is evaluated -and in that case the formula does not constrain the value of a- or at some point in the future -and in that case, a has to be true from the moment the formula is evaluated until the instant before b is true (the formula does not constrain the value of a in the moment in which b is true or after it). In addition, d has to be true either in the moment in which the formula is evaluated -and in that case the formula does not constrain the value of c- or at some point in the future -and in that case, c has to be true from the moment the formula is evaluated until the instant before d is true (the formula does not constrain the value of c in the moment in which d is true or after it)."
2,F(!p & !u),"It is true that, for at least one time in the future, both p and u are false at the same time."
3,(c U a) & (b U a),"Either a or d must eventually become true. Until that happens, b must be true in every state. Once either a or  d becomes true, b no longer needs to hold.
"
4,G a,"Throughout the entire execution of the system, the condition the system is operational must always hold."
5,!X !(w | x),"This formula is true if, in the instant after it is evaluated, at least one between w and x is true. "
6,b U (d & a),"d and a have to be true either in the moment in which the formula is evaluated -and in that case, the formula does not constrain the value of b- or at some point in the future -and in that case, b has to be true from the moment the formula is evaluated until the instant before d and a are true (the formula does not constrain the value of b in the moment in which d and a are true or after it)."
7,X (f & i),"This formula is true if, in the instant after it is evaluated, f and i are both true."
8,G(!a_F z),"If a is false, then at some point z must be true for always"
9,X (y => x & w),"In the instant, after the formula is evaluated, ify is true, x and w also have to be true (if y is false, x and w can assume any value). "
10,X t => X y,"In the next moment of the system execution, if t holds, then y must also hold in that same next moment."
11,X (f & i),"In the very next state, both f  and i must be true."" This formula imposes a constraint only on the next state following the current one. It does not impose any constraints on the current state or any states beyond the next one. The formula is satisfied if both f  and i are true in the next state and violated if either is false."
12,X a & b,"In the instant in which the formula is evaluated, b has to be true, and in the instant after it, a has also to be true. "
13,G (j => !f),"In every state of the system's execution, if j is true, then f must be false. This constraint applies globally, meaning it must hold at every state throughout the entire execution. If there is any state where \( j \) is true and \( f \) is also true, the formula is violated. If \( j \) is false, the formula does not impose any constraint on \( f \) in that state."
14,G a,"The condition a must be true in every state of the execution, starting from the current state and continuing indefinitely into the future. If at any state a becomes false, the formula is violated. Therefore, a imposes a continuous and unending constraint on the system, requiring its truth at all times."
15,t => (x & y),"In any system execution, whenever condition t is true, it must be the case that both conditions x and y are also true."
16,a U c,"Condition a must hold at every moment until condition c becomes true. Once c is true, a does not need to hold anymore."
17,X (f & i)," In the instant, after the formula is evaluated, f and i have both to be true. "
18,a U c,"In summary, the formula a U c requires that c eventually becomes true, and until that happens, a must be true. Once c is true, the constraints on a are lifted, and the formula is considered satisfied.

"
19,G(!a_F z),"It is always true that, if a is false, there must be a time, at least once, in the future where z holds."
20,X a & !G b,"In the next moment of the system execution, a must hold, and there must be at least one moment in the future where b does not hold."
21,!X t,"In the very next state, t must be false."" This imposes a constraint only on the immediate next state following the current one. Once the next state is evaluated, and t is confirmed to be false, the formula is satisfied, and no further constraints are imposed on t in subsequent states. If t is true in the next state, the formula is violated."
22,X a => X c,"This formula is true if, in the instant after it is evaluated, either a is false (and c can be either true or false) or a and c are both true."
23,X a & b,"This formula is true if, in the instant in which it is evaluated, b is true and the instant after it, a is true."
24,G(!q) | G(!m),"At the start of execution, choose q, m, or both to be false throughout the entirety of the execution."
25,X !(t | w),"This formula is true if, in the instant after it is evaluated, both t and and w are false. "
26,G (!f | !i),"In every state of the system's execution, it must be the case that either `f` is false, `i` is false, or both are false. The system must never reach a state where both `f` and `i` are true simultaneously. This constraint applies globally and continuously throughout the entire execution of the system."""
27,F (o | u),"There is at least one point during the system execution (that point can also be the present moment), in which at least one between o and u is true"
28,b U !d,"The formula b U ¬ d is evaluated at a given moment in time. It requires that at some point in the future, ¬ d (meaning ""d is false"") must become true. Until ¬ d becomes true, b must be true in every state from the current state up to, but not including, the state where ¬ d first holds.

"
29,X b => !X d," In the instant, after the formula is evaluated, if b is true, d has to be false (if b is false, d can be either true or false). "
30,X (t | w),"This formula is true if, in the instant after it is evaluated, at least one between t and w is true. "
31,b | !X a,"In the current moment of the system execution, either condition b holds, or in the next moment, condition a should not hold."
32,X t => X y,"If t is true in the very next state, then y must also be true in that next state."" This formula imposes a constraint only on the immediate next state following the current one, and it is satisfied unless t is true and y is false in that next state."
33,G(!q) | G(!m),"Either m is always false, or q is always false, or both"
34,X(!g | !j),"In the next moment of system execution, either g must not hold or j must not hold (or both)"
35,b U (d & a),The condition b should hold at every moment until both d and a hold at the same time.
36,X(!g | !j),"The formula X(!g | !j) requires that in the next state, at least one of g or j must be false. It does not impose constraints on the current state, nor does it enforce any conditions beyond the next state. The formula is satisfied if in the next state either g or j is false (or both). It is violated if, in the next state, both g and j are true."
37,G(c_X G r),"At any point if c holds, then beginning in the next step, r must be true for the remainder of the sequence."
38,G(c_X G r),"It must always be true that 'if c is true, then starting at the next step and onwards, r must always be true."
39,G (!i) | F (f U i),"Either i must always be false throughout the execution, or there must be a future point where i becomes true, with f  being true in every state leading up to that point. If i is always false, the formula is satisfied without further constraints on f . If i eventually becomes true, f must be true until that moment, after which no further constraints are imposed by this formula."""
40,F (f => j),"During the system execution, either f is always false or, in at least one moment, g is true, and at the same time, j is true."
41,X (t & y),"In the next moment of the system execution, both t and y must be true."
42,t => (x & y),"If t is true at any given moment, then both x and y must also be true at that same moment. If t is false, there are no constraints on x and y."" This formula is concerned solely with the immediate truth values of t, x, and y, and does not impose any temporal constraints beyond the current state"
43,G(c_X G r),"It is always true that, if c holds, starting the next moment and continuing forever, r holds"
44,a & X b,"In the instant in which the formula is evaluated, a has to be true, and in the instant after it, b has also to be true. "
45,b U (a | d),"In the system execution, proposition b must hold at every moment until either proposition a or proposition d holds. Once either a or d holds, b is no longer required to hold."
46,X a => X c,"In the instant, after the formula is evaluated, if a is true, c also has to be true (if a is false, c can be either true or false). "
47,X (t | w),"In the instant, after the formula is evaluated, at least one between t and w has to be true "
48,!X !(w | x),"In the next moment of the system execution, at least one of w or x must hold."
49,F (o U u),"There must be a future point where u  becomes true. Until that point, o must be true in every state. Once u is true, there are no further constraints on o or u."" This means that the system must eventually reach a state where u is true, and until then, o must consistently hold."
50,!X t,"In the next moment of the system execution, the condition t should not hold."
51,G(a_F(vUw)),"It is always true that, if a holds, then at at least one future point, v will be true until the moment w becomes true."
52,(b | !a) & X (d U c),"In the instant in which the formula is evaluated, at least one of these conditions has to be true: 1. b is true, 2. a is false, and c has to be true either in the moment after it-and, in that case, the formula does not constrain the value of d- or at some point in the future -and in that case, d has to be true until the instant before c is true (the formula does not constrain the value of c in the moment in which a is true or after it)."
53,X a => X c,"In summary, X a => X c requires that if a is true in the next state, then c must also be true in that same next state. If a is not true in the next state, the formula imposes no constraints on c. The formula's constraints are limited to the transition from the current state to the next state and do not extend beyond that."
54,a U (c & d),"At every moment in the system execution, a must hold until both c and d hold simultaneously."
55,X (t & y),"""In the very next state, both t and y must be true."" This formula imposes a constraint only on the immediate next state following the current one. It does not impose any constraints on the current state or any states beyond the next one. The formula is satisfied if both t and y are true in the next state and violated if either is false."
56,(a U b) & (c U d),"In the system execution, it is required that eventually b occurs, with a holding at every moment up to that point, and simultaneously, eventually d occurs, with c holding at every moment up to that point."
57,b & X (a U c),"In the current moment in which the formula is evaluated b has to be true and  c has to be true either in the moment in which the formula is evaluated -and in that case the formula does not constrain the value of a- or at some point in the future -and in that case, a has to be true from the moment the formula is evaluated until the instant before c is true (the formula does not constrain the value of a in the moment in which c is true or after it)."
58,(c & b) U a,"In summary, the formula (c ∧ b) U a requires that a eventually becomes true, and until that happens, both c and b must be true. Once a is true, the constraints on c and b are lifted.

"
59,G (n => s),"In every state of the execution, if n is true, then s must also be true."" The formula imposes a constraint only when n is true, requiring s to be true at the same time. This constraint applies globally, meaning it must hold in every state throughout the execution. If there is any state where n is true and s is false, the formula is violated. If n is false, there are no constraints on s for that state"
60,a & X b,"This formula is true if, in the instant in which it is evaluated, a is true and the instant after it, b is true."
61,G (n => s),"Throughout the entire execution of the system, whenever condition n holds, condition s must also hold."
62,F (!y & w),"In the future, there will be a moment when y does not hold, and at the same time, w holds."
63,b U (d & a),"At some point in the future, both d and a must be true simultaneously. Until that moment, b must be true in every state. Once (d & a) is true, there are no further constraints on b."
64,(y & !d) | (y => d),"In the system execution, either y holds while d does not hold, or if y holds, then d must also hold."
65,(c & b) U a,"a has to be true either in the moment in which the formula is evaluated -and in that case the formula does not constrain the value of c and b- or at some point in the future -and in that case, c and b have both  to be true from the moment the formula is evaluated until the instant before a is true (the formula does not constrain the value of c and b in the moment in which a is true or after it)."
66,X (!i) | X (j),"In the instant, after the formula is evaluated, at least one between these two conditions has to hold: i is false or j is true"
67,F (f => j),"Eventually, there must be a state in the future where if  f is true, then j must also be true. Until such a state is reached, there are no constraints on f and j. The formula is satisfied if there is at least one future state where the implication holds, and it is violated if no such state exists"
68,!X t,"This formula is true if, in the instant after it is evaluated, t is false. "
69,!X !(w | x),"""In the next state, at least one of w or x must be true."" This formula imposes a constraint only on the immediate next state after it is evaluated, requiring that either w or x (or both) be true in that state. There are no further constraints beyond this next state."
70,G(!a_F z),"If a is false at any point, z must be true at some point in the future"
71,(b U c) & (d U !b),"In the system execution, b must hold continuously until c eventually holds, and simultaneously, d must hold continuously until b no longer holds."
72,(y & !d) | (y => d),"This formula is satisfied if, in the current state, either y is true and d is false, or if whenever y is true, d is also true. It does not impose any constraints on future states, as it lacks temporal operators. The formula is violated if y is true and d is true, or if y is true and d is false, failing both conditions."
73,F (o U u),"There has to be at least one moment (that point can also be the present moment) in the system execution, in which u is true"
74,a U (c & d),"The condition (c &d) must eventually become true. Until that happens, a  must be true in every state. If(c &d) is true at the initial evaluation, then a is not constrained. Once (c &d) becomes true, the requirement for a to be true is lifted."
75,(y & !d) | (y => d),"The formula is true because if y is true when it is evaluated and d is false, (y & !d) is true, otherwise (y=>d) is true, while, if y is false (y=>d ) is true, independently from the value of d"
76,X !b & d,"In summary, X !b & d requires that in the very next state, b must be false and d must be true. This constraint applies only to the next state and does not affect the current state or any subsequent states beyond the next one.
"
77,F d | G !n,"In the system execution, either d will eventually occur at some point, or n will consistently not occur at any time in the future."
78,F(!p & !u),"At any time in the future, there is a point where both p and u are false."
79,b | !X a," In the instant in which the formula is evaluated, b has to be true, or in the instant after it, a has to be false (or both conditions are true at the same time). "
80,t => w,"In the instant in which the formula is evaluated, if t is true, w has to be true"
81,F(!p & !u),"at some point, both p and u must both be false"
82,X !(t | w),"In the next moment of the system execution, neither t nor w should hold."
83,(c U a) & (b U a),"a has to be true either at the moment in which the formula is evaluated -and in that case, the formula does not constrain the value of b and c- or at some point in the future -and in that case, b and c has to be true from the moment the formula is evaluated until the instant before a is true (the formula does not constrain the value of b and c in the moment in that moment or after it)."
84,t => w,"If condition t holds, then condition w must also hold."
85,X a & b,"In the current state, b must be true, and in the very next state, a must be true. The formula does not impose any constraints beyond the next state, nor does it require b to be true in the next state or a to remain true beyond the next state."
86,!X !(w | x)," In the instant, after the formula is evaluated, at least one between w and x has to be true "
87,G(c_X G r),If at any point C holds then in the next moment and after that r must always hold.
88,X (!i) | X (j),"This formula is true if, in the instant, after it is evaluated, at least one between these two conditions hold: i is false or j is true. "
89,G (!i) | F (f U i),"Throughout the entire execution of the system, either the condition i never holds, or there will eventually come a time when f holds continuously until i becomes true."
90,X !b & d,"In the next moment of the system execution, b should not hold, and currently, d holds."
91,!G c,"In the system execution, it is not true that condition c holds at all times."
92,G(!q) | G(!m),"In a sequence, either p is always false or m is always false, or both are always false"
93,F (o U u),"Eventually, there will be a point in the future where u occurs, and up until that point, o must hold continuously."
94,X a & !G b," In the instant, after the formula is evaluated, a has to be true or there has to be at least one moment (that point can also be the present moment) in the system execution, in which b is false or both constraints on a and b hold"
95,!F (a & b),It will never be the case that both a and b hold true at the same time in any future moment of the system execution.
96,F (o | u),"There must exist at least one future state where either o is true or u is true, or both are true. The formula does not impose any constraints on the current state or on any states before this condition is met. Once a state is reached where (o | u) holds, the formula is satisfied, and no further constraints apply"
97,a U c,"c has to be true either in the moment in which the formula is evaluated -and in that case the formula does not constrain the value of a- or at some point in the future -and in that case, a has to be true from the moment the formula is evaluated until the instant before c is true (the formula does not constrain the value of a in the moment in which c is true or after it)."
98,t => (x & y),"In the instant in which the formula is evaluated, if t is true, x and y have both to be true"
99,F !b,"At some point in the future, the condition b must not hold."
100,X b => !X d,"This formula is true if, in the instant after it is evaluated, either b is false (and d can be either true or false) or b is true and d is false."
101,X b => !X d,"In summary, the formula X b => !X d imposes a constraint only on the immediate next state, ensuring that if b is true, d must not be true in that same state. This constraint is evaluated and resolved in the next state, with no ongoing implications for future states beyond that point.

"
102,G (n => s),"In every moment of the system execution, when n is true s has to be true (when n is false we do not have any constraint on the value of s)"
103,F !b,"There has to be at least one moment (that point can also be the present moment) in the system execution, in which b is false"
104,!X t," In the instant, after the formula is evaluated, t has to be false"
105,X (!i) | X (j),"In the very next state, either `i` must be false, or `j` must be true. This formula imposes a constraint only on the immediate next state, requiring that at least one of these conditions is met. Once the next state is evaluated, the formula no longer imposes any constraints on subsequent states."
106,G (!f | !i),"In every moment of the system execution, at least one between f and i has to be false"
107,F !b,"The formula F !b requires that there must be at least one future state where b is false. It does not impose any immediate constraints on the current state or the next state but requires that b eventually becomes false at some point in the future. Once a state is reached where b is false, the formula is satisfied, and no further constraints are imposed. The formula is violated if b remains true in all future states."
108,X !b & d,"In the instant in which the formula is evaluated, d has to be true, or in the instant after it, b has to be false (or both conditions are true at the same time). "
109,X a & !G b,"In the very next state, a must be true, and there must be at least one state in the future where b is false."" The constraint on a is immediate and applies only to the next state, while the constraint on b is ongoing until a state is found where b is false."
110,(c U a) & (b U a),"In the system execution, both of the following conditions must be satisfied: First, condition c must hold continuously until condition a eventually holds. Simultaneously, condition b must also hold continuously until condition a eventually holds."
111,G (!f | !i),"At all times during the system execution, either condition f must not hold, or condition i must not hold, or both conditions must not hold."
112,G (j => !f),"In every moment of the system execution, when j is true f has to be false (when j is false we do not have any constraint on the value of f)"
113,X b => !X d,"If in the next moment of the system execution, b holds, then in the next moment of the system execution, d must not hold."
114,(b U c) & (d U !b),"c has to be true either in the moment in which the formula is evaluated -and in that case the formula does not constrain the value of b- or at some point in the future -and in that case, b has to be true from the moment the formula is evaluated until the instant before c is true (the formula does not constrain the value of b in the moment in which c is true or after it). In addition, d has to be false either in the moment in which the formula is evaluated -and in that case the formula does not constrain the value of d- or at some point in the future -and in that case, d has to be true from the moment the formula is evaluated until the instant before b is false (the formula does not constrain the value of d in the moment in which b is false or after it)."
115,X t => X y,"This formula is true if, in the instant after it is evaluated, either t is false (and y can be either true or false) or t and y are both true."
116,(a U b) & (c U d),"Both b and d must eventually become true. Until b is true, a must remain true, and until d is true, c must remain true. Once b and d are true, the constraints on a and c no longer apply. The formula is satisfied if these conditions are met, and violated if they are not."
117,b U !d,"In the system execution, the condition b must hold continuously until a point is reached where the condition d does not hold."
118,X a & b,"In the next moment of the system execution, a should hold, and currently, b must hold."
119,b U (a | d),"a or d or both have to be true either at the moment in which the formula is evaluated -and in that case, the formula does not constrain the value of b- or at some point in the future -and in that case, b has to be true from the moment the formula is evaluated until the instant before at least one between a and d is true (the formula does not constrain the value of b in that moment or after it)."
120,a U (b & c),"In summary, the formula a U (b ∧ c) imposes a requirement that b ∧ c must eventually be true, and until that happens, a must remain true. Once b ∧ c is satisfied, the constraints on a are lifted.

"
121,F(!p & !u),"At some point, p and u must be false"
122,(d U c) | (a U !c),"Either eventually c will occur, with d holding continuously until then, or eventually c will not occur, with a holding continuously until that point."
123,!X !(!g | !j) <=> X(!g | !j),"In the instant, after the formula is evaluated, at least one of these conditions has to hold: 1. g is false, 2. l is false"
124,F d | G !n,"In every moment of the system execution, n has to be false or there has to be at least one moment (that point can also be the present moment) in the system execution, in which d is true or both constraints on d and n holds"
125,a U (b & c),"b and c has to be true either in the moment in which the formula is evaluated -and in that case, the formula does not constrain the value of a- or at some point in the future -and in that case, a has to be true from the moment the formula is evaluated until the instant before b and c are true (the formula does not constrain the value of a in the moment in which b and c are true or after it)."
126,(d U c) | (a U !c),"This formula is always true because if in the current moment c is true, dUC is satisfied, and if it is false, aU!c is satisfied."
127,F (!y & w),"There has to be at least one moment (that point can also be the present moment) in the system execution, in which at the same time y is false and c is true"
128,G(a_F(vUw)),"At any point in the sequence if a is true, then at some point in the future v must be true until w is true."
129,(d | !b) U !a,"In summary, the formula (d ∨ ¬ b) U ¬ a requires that ¬ a must eventually be true, and until that happens, either d must be true or b must be false. Once ¬ a is true, the constraints on d and b are lifted.

"
130,X (t | w),"In the next moment of the system execution, either condition t should hold, or condition w should hold, or both should hold."
131,(b | !a) & X (d U c),"In the current moment of the system execution, either b must hold or a must not hold. Additionally, in the next moment of the system execution, d must hold continuously until c holds."
132,G t | F w,"In every moment of the system execution, t has to be true or there has to be at least one moment (that point can also be the present moment) in the system execution, in which w is true or both constraints on t and w holds"
133,(d U c) | (a U !c),"This formula imposes constraints based on the satisfaction of either of its components. It requires either c to eventually be true with d holding until then, or !c to eventually be true with a holding until then. Once one of these conditions is met, the constraints on the respective variables are lifted."
134,X (t & y),"This formula is true if, in the instant after it is evaluated, t and y are both true."
135,(c & b) U a,"In the system execution, both conditions c and b must hold at the same time continuously until condition a eventually becomes true. At that point, c and b no longer need to hold."
136,d & X (c U a),"Currently, d must be true. In the very next state, a must eventually become true, and until that happens, c must remain true in every state. Once a becomes true, c no longer needs to hold. If d is false now, or if a never becomes true while c is continuously true, the formula is violated."
137,!G c,"There must be at least one state in the execution where c is false. This means that c cannot be true in every state. The formula is satisfied if at least one state is found where c is false, and it is violated if c is true in every state of the execution. The constraint is ongoing until a state is found where c is false, at which point the formula is satisfied.

"
138,F x | F y,"In the future, either x will occur at some point, or y will occur at some point."
139,(d | !b) U !a,"In the system execution, either condition d must hold or condition b must not hold continuously until condition a does not hold."
140,X a => X c,"In the next moment of the system execution, if a holds, then c must also hold in that same next moment."
141,b & X (a U c),"Currently, b must be true. In the very next state, a must hold continuously until c becomes true at some point in the future. Once c is true, the requirement for a to hold is lifted."
142,X (t & y),"In the instant, after the formula is evaluated, t and y have to be true "
143,G(a_F(vUw)),"It must always be true that when a is true, v must eventually always be true until w is true."
144,F (f => j),"At some point in the future, whenever condition f becomes true, condition j must also be true."
145,!F (a & b),"There must not exist any future state where both a and b are true simultaneously. This imposes a constraint over the entire execution of the system, ensuring that a & b is false in every state. The formula is satisfied if a and b are never true at the same time in any state, and it is violated if there is at least one state where both are true.

"
146,X (y => x & w),"This formula is true if, in the instant after it is evaluated, either y is false (and x and w can assume any value) or y, x, and w are all true. "
147,G(!a_F z),"It must always be true that: 'if a is false, then eventually, z must be true'."
148,X t => X y," In the instant, after the formula is evaluated, if t is true, y also has to be true (if t is false, y can be either true or false). "
149,F (!y & w),"The formula F (!y & w) requires that there must be at least one future state where y is false and w is true simultaneously. It does not impose any constraints on the current state or on the states leading up to the satisfaction of the condition. The formula is satisfied once such a state is found, and it does not impose any further constraints after that point. If no such state exists in the future, the formula is violated.

"
150,(b | !a) & X (d U c),"In the current state, either b must be true or a must be false. In the very next state, c must eventually become true, and until it does, d must remain true. Once c is true, there are no further constraints on d."
151,X (f & i),"In the next moment of the system execution, the conditions f and i must both be true."
152,G a,"In every moment of the system execution , a has to be true"
153,a U (c & d),"c and d has to be true either in the moment in which the formula is evaluated -and in that case, the formula does not constrain the value of a- or at some point in the future -and in that case, a has to be true from the moment the formula is evaluated until the instant before c and d are true (the formula does not constrain the value of a in the moment in which c and d are true or after it)."
154,F d | G !n,"Either there must be at least one future state where d is true, or n must be false in every state of the execution. The formula is satisfied if either condition holds, and it is violated if n is ever true or if d never becomes true in any future state"
155,!F (a & b),"In every moment of the system execution , at least one between a and b has to be false"
156,b U (a | d),"In summary, the formula b U (a ∨ d) requires that either a or d must eventually become true, and until that happens, b must be true in every state. Once a ∨ d is true, the requirement on b ceases.

"
157,d & X (c U a),"In the instant in which the formula is evaluated, d has to be true, and a has to be true either in the moment after it-and in that case the formula does not constrain the value of c- or at some point in the future -and in that case, c has to be true until the instant before a is true (the formula does not constrain the value of c in the moment in which a is true or after it)."
158,b | !X a,"In summary, the formula b ∨ ¬ X a is satisfied if either b is true in the current state or a is false in the next state. The constraint on a applies only to the immediate next state and does not extend beyond that.

"
159,X !b & d,"This formula is true if, in the instant in which it is evaluated, d is true or in the instant after it, b is false. "
160,G(c_X G r),"When c is true at time t, at t + 1, r is also true."
161,G t | F w,"The formula G t ∨ F w can be translated into natural language as follows: ""Either t must be true in every state of the execution, or there must exist at least one future state where w is true. If t is true globally, the formula is satisfied

"
162,G(!q) | G(!m),"Either q or m, or both must always be false."
163,t => w,"Whenever t is true, w must also be true in the same state. If t is false, the formula is satisfied regardless of the truth value of w. The formula imposes constraints only in states where t is true, requiring w to be true in those states. There are no ongoing constraints beyond the immediate evaluation of each state"
164,(d | !b) U !a,"a has to be false either in the moment in which the formula is evaluated -and in that case, the formula does not constrain the value of d and b- or at some point in the future -and in that case, from the moment the formula is evaluated until the instant before a is false at least one between these two conditions is true: d is true, or b is false (the condition that is true can be different in each instant). Notice that the formula does not constrain the value of d and b in the moment in which a is false or after it."
165,F (o | u),"Eventually, in the course of the system's execution, either condition o must hold, or condition u must hold, or both conditions must hold."
166,X (y => x & w),"In the very next state, if y is true, then both x and w must also be true. If y is false in the next state, there are no constraints on x and w."" This formula is concerned only with the immediate next state and does not impose any constraints beyond that point."
167,a U (b & c),"In the system execution, the condition a should hold at every moment until a point is reached where both b and c hold true simultaneously."
168,d & X (c U a),"In the current moment, condition d must hold. Additionally, in the next moment of the system execution, condition c should persist until condition a eventually holds."
169,a & X b,"In summary, the formula a & X b requires a to be true right now and b to be true in the next state. Once these conditions are checked, the formula imposes no further constraints on future states.

"
170,G t | F w,"In every possible execution of the system, it must be the case that either the condition t is always true, or the condition w becomes true at least once."
171,b & X (a U c),"In the current moment of the system execution, b must hold. Furthermore, in the next moment, it should be the case that eventually c will hold, and until that happens, a must continuously hold."
172,F x | F y," there has to be at least one moment (that point can also be the present moment) in the system execution, in which b is false or both constraints on a and b hold"
173,X (y => x & w),"In the next moment of the system execution, if condition y is true, then conditions x and w must both be true."
174,X (t | w),"In the very next state, either t or w must be true."" This formula imposes a constraint only on the next state, requiring that at least one of the conditions t or w holds true. Once the next state is evaluated, the formula's constraints cease, and it does not affect any subsequent states."
175,b | !X a,"This formula is true if, in the instant in which it is evaluated, b is true or in the instant after it, a is false."
176,X !(t | w)," The LTL formula `X !(t | w)` requires that in the very next state, neither `t` nor `w` can be true. This constraint applies only to the next state and does not affect any states beyond that. The formula is satisfied if both `t` and `w` are false in the next state and violated if either is true."
177,X !(t | w),"In the instant, after the formula is evaluated, t and w have both to be false. "
178,(b U c) & (d U !b),"c must eventually become true, and until it does, b must be true in every state. Simultaneously, !b must eventually become true, and until it does, d must be true in every state, The constraints on b and d are lifted once c and !b become true, respectively.The formula is satisfied if both conditions are met in any order, and it is violated if either is violated before their respective conditions are satisfied."
179,!G c,"There has to be at least one moment (that point can also be the present moment) in the system execution, in which c is false"
180,F x | F y,"There must exist at least one future state where either x is true or y is true. The formula is satisfied if at least one of these conditions is met at some point in the future. Until then, the system is constrained to eventually satisfy one of these conditions. Once either x or y becomes true, the formula is satisfied, and no further constraints apply."
181,F(!p & !u),At some future point in the sequence p and u must both be false in the same moment.
182,X (!i) | X (j),"In the next moment of the system execution, either i should not hold, or j must hold."
183,b U !d,"d has to be false either in the moment in which the formula is evaluated -and in that case, the formula does not constrain the value of b- or at some point in the future -and in that case, b has to be true from the moment the formula is evaluated until the instant before d is false (the formula does not constrain the value of b when d is false or after it)."
184,a & X b,"Currently, a must hold, and in the next moment of the system execution, b must hold."
185,G (j => !f),"In every moment of the system execution, if condition j holds, then condition f must not hold."
186,G (!i) | F (f U i),"This formula is always true, because either in every moment of the system execution, i is false, or, during the system execution, i becomes false and that satisfies F(fUi)"